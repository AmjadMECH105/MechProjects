function I_simp = Simpson( x, y )
%integrating experimental data using Simpsons 1/3 rule
% control lengths of data
[a,b]=size(x);
[a,c]=size(y);
if (b ~= c)
error('Not same length');
end
if (b < 2)
error('insufficient length');
end
% control of the length of intervals between points
step_Size = x(2) - x(1);
for i=3:b
if (x(i)-x(i-1)) ~= step_Size
error('x input is not equally spaced');
end
end
% Simpson 1/3 rule implemnetation
total = y(1);
for i=2:(b-2)
if mod(i,2)==0
total=total+4*y(i);
else
total=total+2*y(i);
end
end
% last interval
if mod(b,2) == 0
warning(' the trapezoidal rule should be used on the last interval');
total = total + y(b-1);
I_simp = (total*step_Size/3) + ((y(b) + y(b-1))*step_Size/2);
else
total = total + 4*y(b-1) + y(b);
I_simp=total*step_Size/3;
end
disp('Integral value is ');
disp(I_simp);
end
